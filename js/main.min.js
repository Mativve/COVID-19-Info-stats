"use strict";const search=document.getElementById("city_search");let country_dropdown=document.getElementById("city_search_list");function find_country(e){e=e.toLowerCase(),country_dropdown!==document.getElementById("city_search_list")&&(country_dropdown=document.getElementById("city_search_list")),e.length>0?set_country_list(e.toLowerCase()):country_dropdown.querySelectorAll("li a").forEach((function(e){e.parentNode.classList.remove("hide")}))}search&&search.addEventListener("keyup",(function(e){let t=e.target.value;t.length>1?country_dropdown.classList.add("show"):country_dropdown.classList.remove("show"),find_country(t)}));const single_country=document.getElementById("single-country"),single_country_additional=document.getElementById("single-country-additional"),single_country_additional_source=document.getElementById("single-country-additional-source"),single_country_additional_update=document.getElementById("single-country-additional-update"),country_name=document.getElementById("country_name"),country_flag=document.getElementById("country_flag"),country_date=document.getElementById("country_date"),country_infected=document.getElementById("country_infected"),country_deaths=document.getElementById("country_deaths"),country_recovered=document.getElementById("country_recovered"),map=document.getElementById("map"),locations=map.querySelectorAll("[data-countryid]");async function set_single_country_stats(e){let t,a,n;single_country.classList.add("reload");const{cases:o,deaths:c,recovered:r,new_cases:d,new_deaths:s,new_recovered:i,code:l,name:u}=STATS.countries.find((t=>t.code==e));await fetch(site_url+`?type=timeline&country=${e}`).then((e=>e.json())).then((e=>{n=e[0].last_update,e.reverse(),t=e.map((({last_update:e,cases:t,deaths:a,recovered:n})=>({date:e,cases:t,deaths:a,recovered:n}))),a=e.map((({last_update:e})=>new Date(e).toLocaleDateString(get_locale(),date_short_options)));let o=new Date;a.push(o.toLocaleDateString(get_locale(),date_short_options)),a.length&&a.forEach(((e,t)=>{if(e){let n=e.split(/[\.|\,|\/]/g);a[t]=`${n[1]}/${n[0]}/${n[2]}`}}))})),country_name.innerText=u?get_country(l):"N/D",country_name.setAttribute("data-lang",e),country_name.setAttribute("data-lang-target","country");let _=new Date(n);country_date.innerText=n?_.toLocaleDateString(get_locale(),date_options):"N/D",country_flag.setAttribute("src",return_flag_url(l,null,!1)),update_data_counter("country_infected",o),update_data_counter("country_deaths",c),update_data_counter("country_recovered",r),update_data_counter("country_infected_today",d),update_data_counter("country_deaths_today",s),update_data_counter("country_recovered_today",i),await fetch(`${site_url}?type=additionalexist&country=${e}`).then((e=>e.json())).then((({exist:e,source:t})=>(single_country_additional.classList.toggle("d-none",!e),e&&(single_country_additional_source.innerHTML=t),e))).then((async t=>{t&&await fetch(`${site_url}?type=additional&country=${e}`).then((e=>e.json())).then((e=>{single_country_additional_update.innerHTML=e.update,e.update=!1,Object.keys(e).forEach((t=>{e[t]&&update_data_counter(t,e[t])}))}))})),locations.forEach((function(e){e.dataset.countryid==l||e.dataset.countryid.includes(u)||e.getAttribute("aria-label").includes(u)?(e.classList.add("selected"),e.parentNode.appendChild(e)):e.classList.remove("selected")}));let y=map.querySelectorAll(".selected").length>0;map.classList.toggle("empty",!y),y?zoom_to_country(document.querySelector("#map .map-inner svg .selected")):document.getElementById("map_redirect").setAttribute("href",`https://www.google.com/maps/place/Country ${u}`);let p={confirmed:[],daily_confirmed:[],deaths:[],daily_deaths:[],recovered:[],daily_recovered:[],days:a};t.forEach((function({cases:e,deaths:t,recovered:a},n){p.confirmed.push(e),p.deaths.push(t),p.recovered.push(a)})),p.confirmed.reduce((function(e,t){return p.daily_confirmed.push(t-e),t})),p.deaths.reduce((function(e,t){return p.daily_deaths.push(t-e),t})),p.recovered.reduce((function(e,t){return p.daily_recovered.push(t-e),t}));let h={confirmed:[],deaths:[],recovered:[],days:a};p.daily_confirmed.forEach(((e,t)=>{let a=p.daily_confirmed[t]+p.daily_deaths[t]+p.daily_recovered[t];h.confirmed.push((p.daily_confirmed[t]/a*100).toFixed(2)),h.deaths.push((p.daily_deaths[t]/a*100).toFixed(2)),h.recovered.push((p.daily_recovered[t]/a*100).toFixed(2))})),h.confirmed.pop(),h.deaths.pop(),h.recovered.pop(),h.days.pop(),set_chart("daily",p,{type:"bar"}),set_chart("daily_percentage",h,{type:"bar",stacked:!0}),set_chart("country_chart",p,{type:"LineWithLine"}),single_country.classList.remove("reload"),update_countup()}function set_global_stats(e){let{cases:t,deaths:a,recovered:n}=e;update_data_counter("global_infected",t),update_data_counter("global_deaths",a),update_data_counter("global_recovered",n)}function set_most_least_infected_table(e){let t=get_top_max_by_prop(e,"cases",7),a=get_top_min_by_prop(e,"cases",7,!1);apply_data_to_table({id:"most_infected_country_table",stats:t,random:!1}),apply_data_to_table({id:"least_infected_country_table",stats:a,random:!1})}function set_country_list(e){let t=document.getElementById("city_search_list"),a="";STATS.countries.filter((t=>t.name.toLowerCase().includes(e))).forEach((function(e){let{code:t,name:n}=e;"dp"!=t.toLowerCase()&&(a+=`<li class="input-dropdown-item"><a href="#" data-set-view="country" data-params='{"slug":"${t}"}' data-value="${t} ${get_country(t)}" class="input-dropdown-button" z-index="1"><img src="${return_flag_url(t.toLowerCase())}"/> ${get_country(t)}</a></li>`)})),t.innerHTML=a,update_set_view_triggers(),t.querySelectorAll("a").forEach((function(e){e.addEventListener("click",(function(e){t.classList.contains("show")&&(t.classList.remove("show"),t.previousElementSibling.value="")}))}))}let acl_page=1,acl_prev=document.querySelectorAll('[data-prev="infected-list"]'),acl_next=document.querySelectorAll('[data-next="infected-list"]'),acl_paged=document.querySelectorAll('[data-paged="infected-list"]');function acl_set_paginate(){let e=paginate_array({page:acl_page,per_page:14,items:STATS.countries});acl_prev.forEach((function(t){e.prev?t.removeAttribute("disabled"):t.setAttribute("disabled","disabled")})),acl_next.forEach((function(t){e.next?t.removeAttribute("disabled"):t.setAttribute("disabled","disabled")})),acl_paged.forEach((function(t){t.innerHTML=e.counter})),apply_data_to_table({id:"infected-list",stats:e.items,random:!1,clear:!0}),update_set_view_triggers()}function set_data(){set_global_stats(STATS.global),set_most_least_infected_table(STATS.countries),apply_data_to_table({id:"infected-list",stats:STATS.countries,random:!1}),acl_set_paginate(),update_set_view_triggers(),update_widget_triggers(),update_countup(),set_view()}async function init_stats(){randid("v");let e=null,t=null,a=null,n={cases:0,deaths:0,recovered:0};await fetch("./js/countries.json").then((e=>e.json())).then((t=>{e=t})).catch((e=>console.error("JSON ERROR: countries |",e))),await fetch(`${site_url}?type=status`).then((e=>e.json())).then((e=>{t=e})).catch((e=>console.error("[API ERROR]: init_stats global |",e))),await fetch(`${site_url}?type=diff`).then((e=>e.json())).then((e=>{a=e})).catch((e=>console.error("[API ERROR]: init_stats diffs |",e)));let o=Object.keys(e).map((function(o){let c=e[o],r=t.find((e=>o==e.country)),d=a.find((e=>o==e.country));return!!(c&&r&&d)&&(n.cases+=r.cases,n.deaths+=r.deaths,n.recovered+=r.recovered,{name:c,code:o,cases:r.cases,new_cases:d.new_cases,deaths:r.deaths,new_deaths:d.new_deaths,recovered:r.recovered,new_recovered:d.new_recovered})}));return o=o.filter((e=>0!=e)),{countries:o,global:n}}acl_prev.forEach((function(e){e.addEventListener("click",(function(e){acl_page--,acl_set_paginate()}))})),acl_next.forEach((function(e){e.addEventListener("click",(function(e){acl_page++,acl_set_paginate()}))}));let stats=init_stats();stats.then((e=>{STATS=e,set_data()}));
//# sourceMappingURL=main.min.js.map